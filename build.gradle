import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.12+'
    id "com.modrinth.minotaur" version "2.+"
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
    includeTransitive
}

repositories {}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include modImplementation("com.github.twitch4j:twitch4j:${project.version}")
    include "com.github.twitch4j:twitch4j-chat:${project.version}"
    include "com.github.twitch4j:twitch4j-extensions:${project.version}"
    include "com.github.twitch4j:twitch4j-helix:${project.version}"
    include "com.github.twitch4j:twitch4j-pubsub:${project.version}"
    include "com.github.twitch4j:twitch4j-eventsub-common:${project.version}"
    include "com.github.twitch4j:twitch4j-graphql:${project.version}"
    include "com.github.twitch4j:twitch4j-kraken:${project.version}"
    include "com.github.twitch4j:twitch4j-messaginginterface:${project.version}"
    include "com.github.twitch4j:twitch4j-common:${project.version}"
    include "com.github.twitch4j:twitch4j-auth:${project.version}"
    include "com.github.twitch4j:twitch4j-client-websocket:${project.version}"
    include "com.github.twitch4j:twitch4j-util:${project.version}"
    include "com.github.ben-manes.caffeine:caffeine:2.9.3"
    include "io.github.openfeign:feign-hystrix:11.9.1"
    include "com.netflix.hystrix:hystrix-core:1.5.18"
    include "com.netflix.archaius:archaius-core:0.4.1"
    include "commons-configuration:commons-configuration:1.10"
    include "com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0"
    include "com.github.philippheuer.credentialmanager:credentialmanager:0.1.4"
    include "io.github.openfeign:feign-okhttp:11.9.1"
    include "com.apollographql.apollo:apollo-runtime:2.5.12"
    include "com.squareup.okhttp3:okhttp:4.10.0"
    include "com.github.philippheuer.events4j:events4j-core:0.10.0"
    include "com.github.philippheuer.events4j:events4j-handler-simple:0.10.0"
    include "io.github.openfeign:feign-slf4j:11.9.1"
    include "io.github.openfeign:feign-jackson:11.9.1"
    include "com.neovisionaries:nv-websocket-client:2.14"
    include "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2"
    include "com.fasterxml.jackson.core:jackson-databind:2.13.2"
    include "com.fasterxml.jackson.core:jackson-annotations:2.13.2"
    include "com.fasterxml.jackson.core:jackson-core:2.13.2"
    include "com.google.errorprone:error_prone_annotations:2.10.0"
    include "com.apollographql.apollo:apollo-http-cache-api:2.5.12"
    include "com.apollographql.apollo:apollo-normalized-cache-jvm:2.5.12"
    include "com.apollographql.apollo:apollo-normalized-cache-api-jvm:2.5.12"
    include "com.apollographql.apollo:apollo-api-jvm:2.5.12"
    include "com.squareup.okio:okio-jvm:3.0.0"
    include "net.fabricmc:fabric-language-kotlin:1.8.2+kotlin.1.7.10"
    include "com.github.philippheuer.events4j:events4j-api:0.10.0"
    include "io.github.openfeign:feign-core:11.9.1"
    include "com.nytimes.android:cache:2.0.2"
    include "org.hdrhistogram:HdrHistogram:2.1.9"
    include "io.reactivex:rxjava:1.2.0"
    include "com.benasher44:uuid-jvm:0.2.0"
    include "commons-lang:commons-lang:2.6"
}

configurations.getByName("includeTransitive").resolvedConfiguration.resolvedArtifacts.forEach(dep -> {
    dependencies.add("include", dep.id.componentIdentifier.displayName)
})

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        //mavenLocal()
        maven {
            url = System.getenv().MAVEN_REPO
            credentials(HttpHeaderCredentials) {
                name System.getenv().MAVEN_AUTH_HEADER
                value System.getenv().MAVEN_AUTH_TOKEN
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

task remapMavenJar(type: RemapJarTask, dependsOn: jar) {
    input = jar.archiveFile
    archiveFileName = "${archivesBaseName}-${project.version}-maven.jar"
    addNestedDependencies = false
}

build.dependsOn remapMavenJar
tasks.modrinth.dependsOn(tasks.remapMavenJar)

modrinth {
    String projectVersion = project.version.toString();
    List<String> projectVersionNumber = projectVersion.split("-", 2)
    String projectVersionName = "Release ${projectVersionNumber[0]}"
    if (projectVersion.contains("beta")) {
        List<String> projectBeta = projectVersionNumber[1].split("[.]", 2)
        projectVersionName = "${projectVersionNumber[0]} - Beta ${projectBeta[1]}"
        versionType = "beta"
    } else if (projectVersion.contains("alpha")) {
        List<String> projectAlpha = projectVersionNumber[1].split("[.]", 2)
        projectVersionName = "${projectVersionNumber[0]} - Alpha ${projectAlpha[1]}"
        versionType = "alpha"
    } else if (projectVersion.contains("rc")) {
        List<String> projectRC = projectVersionNumber[1].split("[.]", 2)
        projectVersionName = "${projectVersionNumber[0]} - Release Candidate ${projectRC[1]}"
        versionType = "beta"
    }

    token = System.getenv("MODRINTH_TOKEN")
    projectId = "CmHD69Pj"
    versionName = projectVersionName
    changelog = "The changelog can be seen at https://github.com/twitch4j/twitch4j/releases/tag/v${project.version}"
    uploadFile = remapJar
}
